;; counting sort 
(defun counting-sort (arr) 
  (labels ((arr-max (arr &optional (idx 0))
             (if (= idx (1- (length arr)))
                 (svref arr (1- (length arr)))
                 (let ((rest-max (arr-max arr (1+ idx))))
                   (if (> (svref arr idx) rest-max)
                       (svref arr idx)
                       rest-max)))))
    (let* ((b (make-array (length arr)))
           (largest (arr-max arr))
           (c (make-array (1+ largest) :initial-element 0)))
      (do ((i 0 (1+ i)))
          ((= i (length arr)))
        (incf (svref c (svref arr i))))
      (do ((i 1 (1+ i)))
          ((= i (length c)))
        (incf (svref c i) (svref c (1- i))))
      (do ((j (1- (length arr)) (1- j)))
          ((< j 0))
        (setf (svref b (1- (svref c (svref arr j)))) (svref arr j))
        (decf (svref c (svref arr j))))
      b)))
      
